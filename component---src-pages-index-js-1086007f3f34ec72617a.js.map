{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/styled/layout.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["INDEX_QUERY","Index","styled","nav","withConfig","displayName","componentId","PostLink","Link","IndexPage","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","data","_public_static_d_1030851548_json__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","keywords","allMarkdownRemark","edges","map","edge","Object","assign","node","frontmatter","post","key","id","to","path","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Main","main","Wrapper","section","Footer","footer","Header","siteTitle","react_default","gatsby_browser_entry","SITE_TITLE_QUERY","_4130953669","Container","HeaderLink","site","siteMetadata","defaultProps","header","Layout","Fragment","Date","getFullYear","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-1086007f3f34ec72617a.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link, graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport const INDEX_QUERY = graphql`\n  query {\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            id\n            path\n          }\n        }\n      }\n    }\n  }\n`\n\nfunction IndexPage() {\n  return (\n    <StaticQuery query={INDEX_QUERY}>\n      {data => (\n        <Layout>\n          <SEO\n            title=\"Home\"\n            keywords={[`sevilla`, `football manager 2006`, `react`]}\n          />\n          <h1>Index</h1>\n          <Index>\n            {data.allMarkdownRemark &&\n              data.allMarkdownRemark.edges\n                .map(edge => ({ ...edge.node.frontmatter }))\n                .map(post => (\n                  <PostLink key={post.id} to={post.path}>\n                    {post.title} â†’\n                  </PostLink>\n                ))}\n          </Index>\n        </Layout>\n      )}\n    </StaticQuery>\n  )\n}\n\nconst Index = styled.nav`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-row-gap: 1rem;\n  grid-column-gap: 1rem;\n`\nconst PostLink = styled(Link)`\n  padding: 0.5rem;\n  border: 1px solid #999999;\n  border-radius: 2px;\n  color: #e10707;\n`\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from \"styled-components\"\n\nexport const Main = styled.main`\n  padding: 3rem 1rem;\n`\nexport const Wrapper = styled.section`\n  margin: 0 auto;\n  max-width: 960px;\n`\nexport const Footer = styled.footer`\n  margin: 0 auto;\n  max-width: 960px;\n  font-size: 0.75rem;\n`\n","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <StaticQuery query={SITE_TITLE_QUERY}>\n    {data => (\n      <Container>\n        <HeaderLink to=\"/\">{data.site.siteMetadata.title}</HeaderLink>\n        <HeaderLink to=\"/hall-of-fame\">Hall of Fame</HeaderLink>\n      </Container>\n    )}\n  </StaticQuery>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nconst Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  background: #e10707;\n  padding: 0 1rem;\n  text-transform: uppercase;\n\n  & > * {\n    font-weight: bold;\n    min-height: 3rem;\n    line-height: 3rem;\n  }\n`\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`\n\nconst SITE_TITLE_QUERY = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { Main, Wrapper, Footer } from \"./styled/layout\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <Main>\n      <Wrapper>{children}</Wrapper>\n    </Main>\n    <Footer>Â© {new Date().getFullYear()} Christian SÃ¶derberg</Footer>\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}