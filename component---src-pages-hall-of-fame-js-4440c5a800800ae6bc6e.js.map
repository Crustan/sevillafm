{"version":3,"sources":["webpack:///./src/pages/hall-of-fame.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/styled/layout.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/styled/post.js"],"names":["HallOfFame","markdownRemark","_public_static_d_3117229482_json__WEBPACK_IMPORTED_MODULE_0__","data","frontmatter","html","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","_components_styled_post__WEBPACK_IMPORTED_MODULE_4__","dangerouslySetInnerHTML","__html","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Main","styled","main","withConfig","displayName","componentId","Wrapper","section","footer","Header","siteTitle","react_default","gatsby_browser_entry","SITE_TITLE_QUERY","_4130953669","Container","HeaderLink","to","site","siteMetadata","defaultProps","header","Link","Layout","Fragment","node","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf","PostTitle","PostLink","Post","styled_components__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","h1","article"],"mappings":"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","file":"component---src-pages-hall-of-fame-js-4440c5a800800ae6bc6e.js","sourcesContent":["import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { PostTitle, Post } from \"../components/styled/post\"\n\nconst HOF_QUERY = graphql`\n  query {\n    markdownRemark(frontmatter: { path: { eq: \"/hall-of-fame/\" } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n\nfunction HallOfFame() {\n  const { markdownRemark } = useStaticQuery(HOF_QUERY)\n  const { frontmatter, html } = markdownRemark\n\n  return (\n    <Layout>\n      <SEO title=\"Hall of Fame\" />\n      <PostTitle>{frontmatter.title}</PostTitle>\n      <Post dangerouslySetInnerHTML={{ __html: html }} />\n    </Layout>\n  )\n}\n\nexport default HallOfFame\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from \"styled-components\"\n\nexport const Main = styled.main`\n  padding: 1rem 1rem;\n`\nexport const Wrapper = styled.section`\n  margin: 0 auto;\n  max-width: 50em;\n`\nexport const Footer = styled.footer`\n  margin: 0 auto;\n  padding: 1rem;\n  font-size: 0.75rem;\n  /* max-width: 960px; */\n`\n","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <StaticQuery query={SITE_TITLE_QUERY}>\n    {data => (\n      <Container>\n        <HeaderLink to=\"/\">{data.site.siteMetadata.title}</HeaderLink>\n        <HeaderLink to=\"/hall-of-fame\">Hall of Fame</HeaderLink>\n      </Container>\n    )}\n  </StaticQuery>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nconst Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  background: #e10707;\n  padding: 0 1rem;\n  text-transform: uppercase;\n\n  & > * {\n    font-weight: bold;\n    min-height: 3rem;\n    line-height: 3rem;\n  }\n`\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`\n\nconst SITE_TITLE_QUERY = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { Main, Wrapper } from \"./styled/layout\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <Main>\n      <Wrapper>{children}</Wrapper>\n    </Main>\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nexport const PostTitle = styled.h1`\n  font-size: 0.8rem;\n  text-align: center;\n  text-transform: uppercase;\n  color: #e10707;\n`\n\nexport const PostLink = styled(Link)`\n  display: block;\n  color: hsla(0, 0%, 0%, 0.8);\n  line-height: 1.75;\n`\n\nexport const Post = styled.article`\n  max-width: 55em;\n  & > p {\n    line-height: 1.75;\n  }\n`\n"],"sourceRoot":""}